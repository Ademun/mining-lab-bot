package cmd

import (
	"fmt"

	"github.com/Ademun/mining-lab-bot/pkg/model"
	"github.com/go-telegram/bot/models"
)

func createWeekdayKeyboard() *models.InlineKeyboardMarkup {
	return &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{{Text: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", CallbackData: "weekday:1"}},
			{{Text: "–í—Ç–æ—Ä–Ω–∏–∫", CallbackData: "weekday:2"}},
			{{Text: "–°—Ä–µ–¥–∞", CallbackData: "weekday:3"}},
			{{Text: "–ß–µ—Ç–≤–µ—Ä–≥", CallbackData: "weekday:4"}},
			{{Text: "–ü—è—Ç–Ω–∏—Ü–∞", CallbackData: "weekday:5"}},
			{{Text: "–°—É–±–±–æ—Ç–∞", CallbackData: "weekday:6"}},
			{{Text: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", CallbackData: "weekday:0"}},
			{{Text: "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", CallbackData: "skip:weekday"}},
		},
	}
}

func createLessonKeyboard() *models.InlineKeyboardMarkup {
	return &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{{Text: "08:50 - 10:20 - 1Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:1"}},
			{{Text: "10:35 - 12:05 - 2Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:2"}},
			{{Text: "12:35 - 14:05 - 3Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:3"}},
			{{Text: "14:15 - 15:45 - 4Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:4"}},
			{{Text: "15:55 - 17:20 - 5Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:5"}},
			{{Text: "17:30 - 19:00 - 6Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:6"}},
			{{Text: "19:10 - 20:30 - 7Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:7"}},
			{{Text: "20:40 - 22:00 - 8Ô∏è‚É£ –ø–∞—Ä–∞", CallbackData: "lesson:8"}},
		},
	}
}

func createConfirmationKeyboard() *models.InlineKeyboardMarkup {
	return &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{
				{Text: "‚úÖ –°–æ–∑–¥–∞—Ç—å", CallbackData: "confirm:create"},
				{Text: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", CallbackData: "confirm:cancel"},
			},
		},
	}
}

func createUnsubKeyboard(subs []model.Subscription) *models.InlineKeyboardMarkup {
	keyboard := &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{},
	}
	for idx, sub := range subs {
		label := fmt.Sprintf("%d. –õ–∞–±–∞ ‚Ññ%d, –∞—É–¥. ‚Ññ%d", idx+1, sub.LabNumber,
			sub.LabAuditorium)
		keyboard.InlineKeyboard = append(keyboard.InlineKeyboard,
			[]models.InlineKeyboardButton{
				{Text: label, CallbackData: fmt.Sprintf("unsub:view:%s", sub.UUID)},
				{Text: "‚ùå", CallbackData: fmt.Sprintf("unsub:delete:%s", sub.UUID)},
			})
	}
	keyboard.InlineKeyboard = append(keyboard.InlineKeyboard,
		[]models.InlineKeyboardButton{
			{Text: "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ", CallbackData: "unsub:all"},
		})
	return keyboard
}

func createDeleteAllConfirmKeyboard() *models.InlineKeyboardMarkup {
	return &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{
				{Text: "‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", CallbackData: "unsub:all:confirm"},
				{Text: "‚ùå –ù–µ—Ç", CallbackData: "unsub:all:cancel"},
			},
		},
	}
}

func createLinkKeyboard(url string) *models.InlineKeyboardMarkup {
	return &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{
				{Text: "üîó –ó–ê–ü–ò–°–ê–¢–¨–°–Ø", URL: url},
			},
		},
	}
}
